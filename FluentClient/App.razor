@using Client.Components
@inject AccountService AccountService
@inject ILocalStorageService LocalStorage

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <NotAuthorized>
                    <HandleUnauthorizedAttempt />
                </NotAuthorized>
            </AuthorizeRouteView>
        </Found>
        <NotFound>
            <RedirectToHome />
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code {
    protected override async Task OnInitializedAsync()
    {
        await SetCurrentUser();
    }
    
    private async Task SetCurrentUser()
    {
        var user = await LocalStorage.GetItemAsync<UserDto>("user");
        if (user == null)
        {
            return;
        }
        AccountService.CurrentUser = user;
    }
}